/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-1461af1efd5cc75bf21cb8256a8b42f9bd4278be
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.platform.api;

import com.atlassian.jira.invoker.ApiCallback;
import com.atlassian.jira.invoker.ApiClient;
import com.atlassian.jira.invoker.ApiException;
import com.atlassian.jira.invoker.ApiResponse;
import com.atlassian.jira.invoker.Configuration;
import com.atlassian.jira.invoker.Pair;
import com.atlassian.jira.invoker.ProgressRequestBody;
import com.atlassian.jira.invoker.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.atlassian.jira.platform.model.CreatePrioritySchemeDetails;
import com.atlassian.jira.platform.model.PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects;
import com.atlassian.jira.platform.model.PageBeanPriorityWithSequence;
import com.atlassian.jira.platform.model.PageBeanProject;
import com.atlassian.jira.platform.model.PrioritySchemeId;
import java.util.Set;
import com.atlassian.jira.platform.model.SuggestedMappingsRequestBean;
import com.atlassian.jira.platform.model.UpdatePrioritySchemeRequestBean;
import com.atlassian.jira.platform.model.UpdatePrioritySchemeResponseBean;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PrioritySchemesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public PrioritySchemesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PrioritySchemesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createPriorityScheme
     * @param createPrioritySchemeDetails  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Returned if the request is completed. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Returned if the request is accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid.  **Mappings Validation Errors**   *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;in&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are required, add them to the mappings object. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Returned if an action with this priority scheme is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createPrioritySchemeCall(CreatePrioritySchemeDetails createPrioritySchemeDetails, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createPrioritySchemeDetails;

        // create path and map variables
        String localVarPath = "/rest/api/3/priorityscheme";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createPrioritySchemeValidateBeforeCall(CreatePrioritySchemeDetails createPrioritySchemeDetails, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'createPrioritySchemeDetails' is set
        if (createPrioritySchemeDetails == null) {
            throw new ApiException("Missing the required parameter 'createPrioritySchemeDetails' when calling createPriorityScheme(Async)");
        }

        return createPrioritySchemeCall(createPrioritySchemeDetails, _callback);

    }

    /**
     * Create priority scheme
     * Creates a new priority scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param createPrioritySchemeDetails  (required)
     * @return PrioritySchemeId
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Returned if the request is completed. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Returned if the request is accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid.  **Mappings Validation Errors**   *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;in&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are required, add them to the mappings object. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Returned if an action with this priority scheme is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public PrioritySchemeId createPriorityScheme(CreatePrioritySchemeDetails createPrioritySchemeDetails) throws ApiException {
        ApiResponse<PrioritySchemeId> localVarResp = createPrioritySchemeWithHttpInfo(createPrioritySchemeDetails);
        return localVarResp.getData();
    }

    /**
     * Create priority scheme
     * Creates a new priority scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param createPrioritySchemeDetails  (required)
     * @return ApiResponse&lt;PrioritySchemeId&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Returned if the request is completed. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Returned if the request is accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid.  **Mappings Validation Errors**   *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;in&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are required, add them to the mappings object. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Returned if an action with this priority scheme is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PrioritySchemeId> createPrioritySchemeWithHttpInfo(CreatePrioritySchemeDetails createPrioritySchemeDetails) throws ApiException {
        okhttp3.Call localVarCall = createPrioritySchemeValidateBeforeCall(createPrioritySchemeDetails, null);
        Type localVarReturnType = new TypeToken<PrioritySchemeId>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create priority scheme (asynchronously)
     * Creates a new priority scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param createPrioritySchemeDetails  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Returned if the request is completed. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Returned if the request is accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid.  **Mappings Validation Errors**   *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;in&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are required, add them to the mappings object. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Returned if an action with this priority scheme is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createPrioritySchemeAsync(CreatePrioritySchemeDetails createPrioritySchemeDetails, final ApiCallback<PrioritySchemeId> _callback) throws ApiException {

        okhttp3.Call localVarCall = createPrioritySchemeValidateBeforeCall(createPrioritySchemeDetails, _callback);
        Type localVarReturnType = new TypeToken<PrioritySchemeId>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deletePriorityScheme
     * @param schemeId The priority scheme ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect or missing. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deletePrioritySchemeCall(Long schemeId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest/api/3/priorityscheme/{schemeId}"
            .replace("{" + "schemeId" + "}", localVarApiClient.escapeString(schemeId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deletePrioritySchemeValidateBeforeCall(Long schemeId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'schemeId' is set
        if (schemeId == null) {
            throw new ApiException("Missing the required parameter 'schemeId' when calling deletePriorityScheme(Async)");
        }

        return deletePrioritySchemeCall(schemeId, _callback);

    }

    /**
     * Delete priority scheme
     * Deletes a priority scheme.  This operation is only available for priority schemes without any associated projects. Any associated projects must be removed from the priority scheme before this operation can be performed.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param schemeId The priority scheme ID. (required)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect or missing. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
     </table>
     */
    public Object deletePriorityScheme(Long schemeId) throws ApiException {
        ApiResponse<Object> localVarResp = deletePrioritySchemeWithHttpInfo(schemeId);
        return localVarResp.getData();
    }

    /**
     * Delete priority scheme
     * Deletes a priority scheme.  This operation is only available for priority schemes without any associated projects. Any associated projects must be removed from the priority scheme before this operation can be performed.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param schemeId The priority scheme ID. (required)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect or missing. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> deletePrioritySchemeWithHttpInfo(Long schemeId) throws ApiException {
        okhttp3.Call localVarCall = deletePrioritySchemeValidateBeforeCall(schemeId, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Delete priority scheme (asynchronously)
     * Deletes a priority scheme.  This operation is only available for priority schemes without any associated projects. Any associated projects must be removed from the priority scheme before this operation can be performed.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param schemeId The priority scheme ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect or missing. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deletePrioritySchemeAsync(Long schemeId, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = deletePrioritySchemeValidateBeforeCall(schemeId, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getAvailablePrioritiesByPriorityScheme
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param query The string to query priorities on by name. (optional, default to )
     * @param exclude A list of priority IDs to exclude from the results. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAvailablePrioritiesByPrioritySchemeCall(String schemeId, String startAt, String maxResults, String query, Set<String> exclude, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest/api/3/priorityscheme/priorities/available";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (startAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startAt", startAt));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (query != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("query", query));
        }

        if (schemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("schemeId", schemeId));
        }

        if (exclude != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "exclude", exclude));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAvailablePrioritiesByPrioritySchemeValidateBeforeCall(String schemeId, String startAt, String maxResults, String query, Set<String> exclude, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'schemeId' is set
        if (schemeId == null) {
            throw new ApiException("Missing the required parameter 'schemeId' when calling getAvailablePrioritiesByPriorityScheme(Async)");
        }

        return getAvailablePrioritiesByPrioritySchemeCall(schemeId, startAt, maxResults, query, exclude, _callback);

    }

    /**
     * Get available priorities by priority scheme
     * Returns a [paginated](#pagination) list of priorities available for adding to a priority scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param query The string to query priorities on by name. (optional, default to )
     * @param exclude A list of priority IDs to exclude from the results. (optional)
     * @return PageBeanPriorityWithSequence
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public PageBeanPriorityWithSequence getAvailablePrioritiesByPriorityScheme(String schemeId, String startAt, String maxResults, String query, Set<String> exclude) throws ApiException {
        ApiResponse<PageBeanPriorityWithSequence> localVarResp = getAvailablePrioritiesByPrioritySchemeWithHttpInfo(schemeId, startAt, maxResults, query, exclude);
        return localVarResp.getData();
    }

    /**
     * Get available priorities by priority scheme
     * Returns a [paginated](#pagination) list of priorities available for adding to a priority scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param query The string to query priorities on by name. (optional, default to )
     * @param exclude A list of priority IDs to exclude from the results. (optional)
     * @return ApiResponse&lt;PageBeanPriorityWithSequence&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PageBeanPriorityWithSequence> getAvailablePrioritiesByPrioritySchemeWithHttpInfo(String schemeId, String startAt, String maxResults, String query, Set<String> exclude) throws ApiException {
        okhttp3.Call localVarCall = getAvailablePrioritiesByPrioritySchemeValidateBeforeCall(schemeId, startAt, maxResults, query, exclude, null);
        Type localVarReturnType = new TypeToken<PageBeanPriorityWithSequence>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get available priorities by priority scheme (asynchronously)
     * Returns a [paginated](#pagination) list of priorities available for adding to a priority scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param query The string to query priorities on by name. (optional, default to )
     * @param exclude A list of priority IDs to exclude from the results. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAvailablePrioritiesByPrioritySchemeAsync(String schemeId, String startAt, String maxResults, String query, Set<String> exclude, final ApiCallback<PageBeanPriorityWithSequence> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAvailablePrioritiesByPrioritySchemeValidateBeforeCall(schemeId, startAt, maxResults, query, exclude, _callback);
        Type localVarReturnType = new TypeToken<PageBeanPriorityWithSequence>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getPrioritiesByPriorityScheme
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getPrioritiesByPrioritySchemeCall(String schemeId, String startAt, String maxResults, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest/api/3/priorityscheme/{schemeId}/priorities"
            .replace("{" + "schemeId" + "}", localVarApiClient.escapeString(schemeId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (startAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startAt", startAt));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getPrioritiesByPrioritySchemeValidateBeforeCall(String schemeId, String startAt, String maxResults, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'schemeId' is set
        if (schemeId == null) {
            throw new ApiException("Missing the required parameter 'schemeId' when calling getPrioritiesByPriorityScheme(Async)");
        }

        return getPrioritiesByPrioritySchemeCall(schemeId, startAt, maxResults, _callback);

    }

    /**
     * Get priorities by priority scheme
     * Returns a [paginated](#pagination) list of priorities by scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @return PageBeanPriorityWithSequence
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public PageBeanPriorityWithSequence getPrioritiesByPriorityScheme(String schemeId, String startAt, String maxResults) throws ApiException {
        ApiResponse<PageBeanPriorityWithSequence> localVarResp = getPrioritiesByPrioritySchemeWithHttpInfo(schemeId, startAt, maxResults);
        return localVarResp.getData();
    }

    /**
     * Get priorities by priority scheme
     * Returns a [paginated](#pagination) list of priorities by scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @return ApiResponse&lt;PageBeanPriorityWithSequence&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PageBeanPriorityWithSequence> getPrioritiesByPrioritySchemeWithHttpInfo(String schemeId, String startAt, String maxResults) throws ApiException {
        okhttp3.Call localVarCall = getPrioritiesByPrioritySchemeValidateBeforeCall(schemeId, startAt, maxResults, null);
        Type localVarReturnType = new TypeToken<PageBeanPriorityWithSequence>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get priorities by priority scheme (asynchronously)
     * Returns a [paginated](#pagination) list of priorities by scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getPrioritiesByPrioritySchemeAsync(String schemeId, String startAt, String maxResults, final ApiCallback<PageBeanPriorityWithSequence> _callback) throws ApiException {

        okhttp3.Call localVarCall = getPrioritiesByPrioritySchemeValidateBeforeCall(schemeId, startAt, maxResults, _callback);
        Type localVarReturnType = new TypeToken<PageBeanPriorityWithSequence>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getPrioritySchemes
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param priorityId A set of priority IDs to filter by. To include multiple IDs, provide an ampersand-separated list. For example, &#x60;priorityId&#x3D;10000&amp;priorityId&#x3D;10001&#x60;. (optional)
     * @param schemeId A set of priority scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, &#x60;schemeId&#x3D;10000&amp;schemeId&#x3D;10001&#x60;. (optional)
     * @param schemeName The name of scheme to search for. (optional, default to )
     * @param onlyDefault Whether only the default priority is returned. (optional, default to false)
     * @param orderBy The ordering to return the priority schemes by. (optional, default to +name)
     * @param expand A comma separated list of additional information to return. \&quot;priorities\&quot; will return priorities associated with the priority scheme. \&quot;projects\&quot; will return projects associated with the priority scheme. &#x60;expand&#x3D;priorities,projects&#x60;. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getPrioritySchemesCall(String startAt, String maxResults, Set<Long> priorityId, Set<Long> schemeId, String schemeName, Boolean onlyDefault, String orderBy, String expand, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest/api/3/priorityscheme";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (startAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startAt", startAt));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (priorityId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "priorityId", priorityId));
        }

        if (schemeId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "schemeId", schemeId));
        }

        if (schemeName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("schemeName", schemeName));
        }

        if (onlyDefault != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("onlyDefault", onlyDefault));
        }

        if (orderBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orderBy", orderBy));
        }

        if (expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("expand", expand));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getPrioritySchemesValidateBeforeCall(String startAt, String maxResults, Set<Long> priorityId, Set<Long> schemeId, String schemeName, Boolean onlyDefault, String orderBy, String expand, final ApiCallback _callback) throws ApiException {
        return getPrioritySchemesCall(startAt, maxResults, priorityId, schemeId, schemeName, onlyDefault, orderBy, expand, _callback);

    }

    /**
     * Get priority schemes
     * Returns a [paginated](#pagination) list of priority schemes.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param priorityId A set of priority IDs to filter by. To include multiple IDs, provide an ampersand-separated list. For example, &#x60;priorityId&#x3D;10000&amp;priorityId&#x3D;10001&#x60;. (optional)
     * @param schemeId A set of priority scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, &#x60;schemeId&#x3D;10000&amp;schemeId&#x3D;10001&#x60;. (optional)
     * @param schemeName The name of scheme to search for. (optional, default to )
     * @param onlyDefault Whether only the default priority is returned. (optional, default to false)
     * @param orderBy The ordering to return the priority schemes by. (optional, default to +name)
     * @param expand A comma separated list of additional information to return. \&quot;priorities\&quot; will return priorities associated with the priority scheme. \&quot;projects\&quot; will return projects associated with the priority scheme. &#x60;expand&#x3D;priorities,projects&#x60;. (optional)
     * @return PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects getPrioritySchemes(String startAt, String maxResults, Set<Long> priorityId, Set<Long> schemeId, String schemeName, Boolean onlyDefault, String orderBy, String expand) throws ApiException {
        ApiResponse<PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects> localVarResp = getPrioritySchemesWithHttpInfo(startAt, maxResults, priorityId, schemeId, schemeName, onlyDefault, orderBy, expand);
        return localVarResp.getData();
    }

    /**
     * Get priority schemes
     * Returns a [paginated](#pagination) list of priority schemes.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param priorityId A set of priority IDs to filter by. To include multiple IDs, provide an ampersand-separated list. For example, &#x60;priorityId&#x3D;10000&amp;priorityId&#x3D;10001&#x60;. (optional)
     * @param schemeId A set of priority scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, &#x60;schemeId&#x3D;10000&amp;schemeId&#x3D;10001&#x60;. (optional)
     * @param schemeName The name of scheme to search for. (optional, default to )
     * @param onlyDefault Whether only the default priority is returned. (optional, default to false)
     * @param orderBy The ordering to return the priority schemes by. (optional, default to +name)
     * @param expand A comma separated list of additional information to return. \&quot;priorities\&quot; will return priorities associated with the priority scheme. \&quot;projects\&quot; will return projects associated with the priority scheme. &#x60;expand&#x3D;priorities,projects&#x60;. (optional)
     * @return ApiResponse&lt;PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects> getPrioritySchemesWithHttpInfo(String startAt, String maxResults, Set<Long> priorityId, Set<Long> schemeId, String schemeName, Boolean onlyDefault, String orderBy, String expand) throws ApiException {
        okhttp3.Call localVarCall = getPrioritySchemesValidateBeforeCall(startAt, maxResults, priorityId, schemeId, schemeName, onlyDefault, orderBy, expand, null);
        Type localVarReturnType = new TypeToken<PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get priority schemes (asynchronously)
     * Returns a [paginated](#pagination) list of priority schemes.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param priorityId A set of priority IDs to filter by. To include multiple IDs, provide an ampersand-separated list. For example, &#x60;priorityId&#x3D;10000&amp;priorityId&#x3D;10001&#x60;. (optional)
     * @param schemeId A set of priority scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, &#x60;schemeId&#x3D;10000&amp;schemeId&#x3D;10001&#x60;. (optional)
     * @param schemeName The name of scheme to search for. (optional, default to )
     * @param onlyDefault Whether only the default priority is returned. (optional, default to false)
     * @param orderBy The ordering to return the priority schemes by. (optional, default to +name)
     * @param expand A comma separated list of additional information to return. \&quot;priorities\&quot; will return priorities associated with the priority scheme. \&quot;projects\&quot; will return projects associated with the priority scheme. &#x60;expand&#x3D;priorities,projects&#x60;. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getPrioritySchemesAsync(String startAt, String maxResults, Set<Long> priorityId, Set<Long> schemeId, String schemeName, Boolean onlyDefault, String orderBy, String expand, final ApiCallback<PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects> _callback) throws ApiException {

        okhttp3.Call localVarCall = getPrioritySchemesValidateBeforeCall(startAt, maxResults, priorityId, schemeId, schemeName, onlyDefault, orderBy, expand, _callback);
        Type localVarReturnType = new TypeToken<PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getProjectsByPriorityScheme
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param projectId The project IDs to filter by. For example, &#x60;projectId&#x3D;10000&amp;projectId&#x3D;10001&#x60;. (optional)
     * @param query The string to query projects on by name. (optional, default to )
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProjectsByPrioritySchemeCall(String schemeId, String startAt, String maxResults, Set<Long> projectId, String query, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest/api/3/priorityscheme/{schemeId}/projects"
            .replace("{" + "schemeId" + "}", localVarApiClient.escapeString(schemeId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (startAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startAt", startAt));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (projectId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "projectId", projectId));
        }

        if (query != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("query", query));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getProjectsByPrioritySchemeValidateBeforeCall(String schemeId, String startAt, String maxResults, Set<Long> projectId, String query, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'schemeId' is set
        if (schemeId == null) {
            throw new ApiException("Missing the required parameter 'schemeId' when calling getProjectsByPriorityScheme(Async)");
        }

        return getProjectsByPrioritySchemeCall(schemeId, startAt, maxResults, projectId, query, _callback);

    }

    /**
     * Get projects by priority scheme
     * Returns a [paginated](#pagination) list of projects by scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param projectId The project IDs to filter by. For example, &#x60;projectId&#x3D;10000&amp;projectId&#x3D;10001&#x60;. (optional)
     * @param query The string to query projects on by name. (optional, default to )
     * @return PageBeanProject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public PageBeanProject getProjectsByPriorityScheme(String schemeId, String startAt, String maxResults, Set<Long> projectId, String query) throws ApiException {
        ApiResponse<PageBeanProject> localVarResp = getProjectsByPrioritySchemeWithHttpInfo(schemeId, startAt, maxResults, projectId, query);
        return localVarResp.getData();
    }

    /**
     * Get projects by priority scheme
     * Returns a [paginated](#pagination) list of projects by scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param projectId The project IDs to filter by. For example, &#x60;projectId&#x3D;10000&amp;projectId&#x3D;10001&#x60;. (optional)
     * @param query The string to query projects on by name. (optional, default to )
     * @return ApiResponse&lt;PageBeanProject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PageBeanProject> getProjectsByPrioritySchemeWithHttpInfo(String schemeId, String startAt, String maxResults, Set<Long> projectId, String query) throws ApiException {
        okhttp3.Call localVarCall = getProjectsByPrioritySchemeValidateBeforeCall(schemeId, startAt, maxResults, projectId, query, null);
        Type localVarReturnType = new TypeToken<PageBeanProject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get projects by priority scheme (asynchronously)
     * Returns a [paginated](#pagination) list of projects by scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param schemeId The priority scheme ID. (required)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param maxResults The maximum number of items to return per page. (optional, default to 50)
     * @param projectId The project IDs to filter by. For example, &#x60;projectId&#x3D;10000&amp;projectId&#x3D;10001&#x60;. (optional)
     * @param query The string to query projects on by name. (optional, default to )
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProjectsByPrioritySchemeAsync(String schemeId, String startAt, String maxResults, Set<Long> projectId, String query, final ApiCallback<PageBeanProject> _callback) throws ApiException {

        okhttp3.Call localVarCall = getProjectsByPrioritySchemeValidateBeforeCall(schemeId, startAt, maxResults, projectId, query, _callback);
        Type localVarReturnType = new TypeToken<PageBeanProject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for suggestedPrioritiesForMappings
     * @param suggestedMappingsRequestBean  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call suggestedPrioritiesForMappingsCall(SuggestedMappingsRequestBean suggestedMappingsRequestBean, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = suggestedMappingsRequestBean;

        // create path and map variables
        String localVarPath = "/rest/api/3/priorityscheme/mappings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call suggestedPrioritiesForMappingsValidateBeforeCall(SuggestedMappingsRequestBean suggestedMappingsRequestBean, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'suggestedMappingsRequestBean' is set
        if (suggestedMappingsRequestBean == null) {
            throw new ApiException("Missing the required parameter 'suggestedMappingsRequestBean' when calling suggestedPrioritiesForMappings(Async)");
        }

        return suggestedPrioritiesForMappingsCall(suggestedMappingsRequestBean, _callback);

    }

    /**
     * Suggested priorities for mappings
     * Returns a [paginated](#pagination) list of priorities that would require mapping, given a change in priorities or projects associated with a priority scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param suggestedMappingsRequestBean  (required)
     * @return PageBeanPriorityWithSequence
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public PageBeanPriorityWithSequence suggestedPrioritiesForMappings(SuggestedMappingsRequestBean suggestedMappingsRequestBean) throws ApiException {
        ApiResponse<PageBeanPriorityWithSequence> localVarResp = suggestedPrioritiesForMappingsWithHttpInfo(suggestedMappingsRequestBean);
        return localVarResp.getData();
    }

    /**
     * Suggested priorities for mappings
     * Returns a [paginated](#pagination) list of priorities that would require mapping, given a change in priorities or projects associated with a priority scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param suggestedMappingsRequestBean  (required)
     * @return ApiResponse&lt;PageBeanPriorityWithSequence&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PageBeanPriorityWithSequence> suggestedPrioritiesForMappingsWithHttpInfo(SuggestedMappingsRequestBean suggestedMappingsRequestBean) throws ApiException {
        okhttp3.Call localVarCall = suggestedPrioritiesForMappingsValidateBeforeCall(suggestedMappingsRequestBean, null);
        Type localVarReturnType = new TypeToken<PageBeanPriorityWithSequence>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Suggested priorities for mappings (asynchronously)
     * Returns a [paginated](#pagination) list of priorities that would require mapping, given a change in priorities or projects associated with a priority scheme.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param suggestedMappingsRequestBean  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returned if the request is successful. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call suggestedPrioritiesForMappingsAsync(SuggestedMappingsRequestBean suggestedMappingsRequestBean, final ApiCallback<PageBeanPriorityWithSequence> _callback) throws ApiException {

        okhttp3.Call localVarCall = suggestedPrioritiesForMappingsValidateBeforeCall(suggestedMappingsRequestBean, _callback);
        Type localVarReturnType = new TypeToken<PageBeanPriorityWithSequence>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updatePriorityScheme
     * @param schemeId The ID of the priority scheme. (required)
     * @param updatePrioritySchemeRequestBean  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Returned if the request is accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid.  **Mappings Validation Errors**   *  &#x60;&#x60;The changes to priority schemes require mapping of priorities. Please provide a value for the &#39;in&#39; mappings object.&#x60;&#x60; Priorities are being removed and/or projects are being added to the scheme, but &#x60;&#x60;in&#x60;&#x60; mappings are not provided.  *  &#x60;&#x60;The changes to priority schemes require mapping of priorities. Please provide a value for the &#39;out&#39; mappings object.&#x60;&#x60; Projects are being removed from the scheme, but &#x60;&#x60;out&#x60;&#x60; mappings are not provided.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as keys for the &#39;in&#39; mappings object do not exist. Please provide existing priority IDs.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but do not exist. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site which are used by projects being added to the current scheme, but are not in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as values for the &#39;in&#39; mappings object do not exist. Please provide existing priority IDs used by the current priority scheme.&#x60;&#x60; The listed priority ID(s) have been provided as values for &#x60;&#x60;in&#x60;&#x60; mappings but do not exist. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as keys for the &#39;out&#39; mappings object do not exist. Please provide existing priority IDs used by the current priority scheme.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are invalid. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as values for the &#39;out&#39; mappings object do not exist. Please provide existing priority IDs used by the default scheme.&#x60;&#x60; The listed priority ID(s) have been provided as values for &#x60;&#x60;out&#x60;&#x60; mappings but are invalid. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the Default Priority Scheme, but are not in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] do not require mapping. Please remove these keys and their corresponding values from the &#39;in&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are not required, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;in&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are required, add them to the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] being mapped to are not in the current scheme. Please remove these values and their corresponding keys from the &#39;in&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are not in use by the current scheme, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] do not require mapping. Please remove these keys and their corresponding values from the &#39;out&#39; mappings object.&#x60;&#x60; The listed priority ID(s) hve been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are not required, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;out&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are required, add them to the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] being mapped to are not in the default scheme. Please remove these values and their corresponding keys from the &#39;out&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are not in use by the Default Priority Scheme, they can be removed from the mappings object. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect or missing. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Returned if an action with this priority scheme is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatePrioritySchemeCall(Long schemeId, UpdatePrioritySchemeRequestBean updatePrioritySchemeRequestBean, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = updatePrioritySchemeRequestBean;

        // create path and map variables
        String localVarPath = "/rest/api/3/priorityscheme/{schemeId}"
            .replace("{" + "schemeId" + "}", localVarApiClient.escapeString(schemeId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updatePrioritySchemeValidateBeforeCall(Long schemeId, UpdatePrioritySchemeRequestBean updatePrioritySchemeRequestBean, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'schemeId' is set
        if (schemeId == null) {
            throw new ApiException("Missing the required parameter 'schemeId' when calling updatePriorityScheme(Async)");
        }

        // verify the required parameter 'updatePrioritySchemeRequestBean' is set
        if (updatePrioritySchemeRequestBean == null) {
            throw new ApiException("Missing the required parameter 'updatePrioritySchemeRequestBean' when calling updatePriorityScheme(Async)");
        }

        return updatePrioritySchemeCall(schemeId, updatePrioritySchemeRequestBean, _callback);

    }

    /**
     * Update priority scheme
     * Updates a priority scheme. This includes its details, the lists of priorities and projects in it  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param schemeId The ID of the priority scheme. (required)
     * @param updatePrioritySchemeRequestBean  (required)
     * @return UpdatePrioritySchemeResponseBean
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Returned if the request is accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid.  **Mappings Validation Errors**   *  &#x60;&#x60;The changes to priority schemes require mapping of priorities. Please provide a value for the &#39;in&#39; mappings object.&#x60;&#x60; Priorities are being removed and/or projects are being added to the scheme, but &#x60;&#x60;in&#x60;&#x60; mappings are not provided.  *  &#x60;&#x60;The changes to priority schemes require mapping of priorities. Please provide a value for the &#39;out&#39; mappings object.&#x60;&#x60; Projects are being removed from the scheme, but &#x60;&#x60;out&#x60;&#x60; mappings are not provided.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as keys for the &#39;in&#39; mappings object do not exist. Please provide existing priority IDs.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but do not exist. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site which are used by projects being added to the current scheme, but are not in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as values for the &#39;in&#39; mappings object do not exist. Please provide existing priority IDs used by the current priority scheme.&#x60;&#x60; The listed priority ID(s) have been provided as values for &#x60;&#x60;in&#x60;&#x60; mappings but do not exist. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as keys for the &#39;out&#39; mappings object do not exist. Please provide existing priority IDs used by the current priority scheme.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are invalid. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as values for the &#39;out&#39; mappings object do not exist. Please provide existing priority IDs used by the default scheme.&#x60;&#x60; The listed priority ID(s) have been provided as values for &#x60;&#x60;out&#x60;&#x60; mappings but are invalid. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the Default Priority Scheme, but are not in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] do not require mapping. Please remove these keys and their corresponding values from the &#39;in&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are not required, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;in&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are required, add them to the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] being mapped to are not in the current scheme. Please remove these values and their corresponding keys from the &#39;in&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are not in use by the current scheme, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] do not require mapping. Please remove these keys and their corresponding values from the &#39;out&#39; mappings object.&#x60;&#x60; The listed priority ID(s) hve been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are not required, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;out&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are required, add them to the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] being mapped to are not in the default scheme. Please remove these values and their corresponding keys from the &#39;out&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are not in use by the Default Priority Scheme, they can be removed from the mappings object. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect or missing. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Returned if an action with this priority scheme is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public UpdatePrioritySchemeResponseBean updatePriorityScheme(Long schemeId, UpdatePrioritySchemeRequestBean updatePrioritySchemeRequestBean) throws ApiException {
        ApiResponse<UpdatePrioritySchemeResponseBean> localVarResp = updatePrioritySchemeWithHttpInfo(schemeId, updatePrioritySchemeRequestBean);
        return localVarResp.getData();
    }

    /**
     * Update priority scheme
     * Updates a priority scheme. This includes its details, the lists of priorities and projects in it  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param schemeId The ID of the priority scheme. (required)
     * @param updatePrioritySchemeRequestBean  (required)
     * @return ApiResponse&lt;UpdatePrioritySchemeResponseBean&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Returned if the request is accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid.  **Mappings Validation Errors**   *  &#x60;&#x60;The changes to priority schemes require mapping of priorities. Please provide a value for the &#39;in&#39; mappings object.&#x60;&#x60; Priorities are being removed and/or projects are being added to the scheme, but &#x60;&#x60;in&#x60;&#x60; mappings are not provided.  *  &#x60;&#x60;The changes to priority schemes require mapping of priorities. Please provide a value for the &#39;out&#39; mappings object.&#x60;&#x60; Projects are being removed from the scheme, but &#x60;&#x60;out&#x60;&#x60; mappings are not provided.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as keys for the &#39;in&#39; mappings object do not exist. Please provide existing priority IDs.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but do not exist. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site which are used by projects being added to the current scheme, but are not in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as values for the &#39;in&#39; mappings object do not exist. Please provide existing priority IDs used by the current priority scheme.&#x60;&#x60; The listed priority ID(s) have been provided as values for &#x60;&#x60;in&#x60;&#x60; mappings but do not exist. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as keys for the &#39;out&#39; mappings object do not exist. Please provide existing priority IDs used by the current priority scheme.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are invalid. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as values for the &#39;out&#39; mappings object do not exist. Please provide existing priority IDs used by the default scheme.&#x60;&#x60; The listed priority ID(s) have been provided as values for &#x60;&#x60;out&#x60;&#x60; mappings but are invalid. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the Default Priority Scheme, but are not in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] do not require mapping. Please remove these keys and their corresponding values from the &#39;in&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are not required, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;in&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are required, add them to the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] being mapped to are not in the current scheme. Please remove these values and their corresponding keys from the &#39;in&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are not in use by the current scheme, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] do not require mapping. Please remove these keys and their corresponding values from the &#39;out&#39; mappings object.&#x60;&#x60; The listed priority ID(s) hve been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are not required, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;out&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are required, add them to the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] being mapped to are not in the default scheme. Please remove these values and their corresponding keys from the &#39;out&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are not in use by the Default Priority Scheme, they can be removed from the mappings object. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect or missing. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Returned if an action with this priority scheme is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<UpdatePrioritySchemeResponseBean> updatePrioritySchemeWithHttpInfo(Long schemeId, UpdatePrioritySchemeRequestBean updatePrioritySchemeRequestBean) throws ApiException {
        okhttp3.Call localVarCall = updatePrioritySchemeValidateBeforeCall(schemeId, updatePrioritySchemeRequestBean, null);
        Type localVarReturnType = new TypeToken<UpdatePrioritySchemeResponseBean>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update priority scheme (asynchronously)
     * Updates a priority scheme. This includes its details, the lists of priorities and projects in it  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param schemeId The ID of the priority scheme. (required)
     * @param updatePrioritySchemeRequestBean  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Returned if the request is accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Returned if the request isn&#39;t valid.  **Mappings Validation Errors**   *  &#x60;&#x60;The changes to priority schemes require mapping of priorities. Please provide a value for the &#39;in&#39; mappings object.&#x60;&#x60; Priorities are being removed and/or projects are being added to the scheme, but &#x60;&#x60;in&#x60;&#x60; mappings are not provided.  *  &#x60;&#x60;The changes to priority schemes require mapping of priorities. Please provide a value for the &#39;out&#39; mappings object.&#x60;&#x60; Projects are being removed from the scheme, but &#x60;&#x60;out&#x60;&#x60; mappings are not provided.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as keys for the &#39;in&#39; mappings object do not exist. Please provide existing priority IDs.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but do not exist. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site which are used by projects being added to the current scheme, but are not in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as values for the &#39;in&#39; mappings object do not exist. Please provide existing priority IDs used by the current priority scheme.&#x60;&#x60; The listed priority ID(s) have been provided as values for &#x60;&#x60;in&#x60;&#x60; mappings but do not exist. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as keys for the &#39;out&#39; mappings object do not exist. Please provide existing priority IDs used by the current priority scheme.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are invalid. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] provided as values for the &#39;out&#39; mappings object do not exist. Please provide existing priority IDs used by the default scheme.&#x60;&#x60; The listed priority ID(s) have been provided as values for &#x60;&#x60;out&#x60;&#x60; mappings but are invalid. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the Default Priority Scheme, but are not in use by the current scheme.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] do not require mapping. Please remove these keys and their corresponding values from the &#39;in&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are not required, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;in&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are required, add them to the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] being mapped to are not in the current scheme. Please remove these values and their corresponding keys from the &#39;in&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;in&#x60;&#x60; mappings but are not in use by the current scheme, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] do not require mapping. Please remove these keys and their corresponding values from the &#39;out&#39; mappings object.&#x60;&#x60; The listed priority ID(s) hve been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are not required, they can be removed from the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the &#39;out&#39; mappings object, where these priorities are the keys with corresponding values.&#x60;&#x60; The listed priority ID(s) have not been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are required, add them to the mappings object.  *  &#x60;&#x60;The priorities with IDs [ID 1, ID 2, ...] being mapped to are not in the default scheme. Please remove these values and their corresponding keys from the &#39;out&#39; mappings object.&#x60;&#x60; The listed priority ID(s) have been provided as keys for &#x60;&#x60;out&#x60;&#x60; mappings but are not in use by the Default Priority Scheme, they can be removed from the mappings object. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Returned if the authentication credentials are incorrect or missing. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Returned if the user doesn&#39;t have the necessary permissions. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Returned if an action with this priority scheme is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatePrioritySchemeAsync(Long schemeId, UpdatePrioritySchemeRequestBean updatePrioritySchemeRequestBean, final ApiCallback<UpdatePrioritySchemeResponseBean> _callback) throws ApiException {

        okhttp3.Call localVarCall = updatePrioritySchemeValidateBeforeCall(schemeId, updatePrioritySchemeRequestBean, _callback);
        Type localVarReturnType = new TypeToken<UpdatePrioritySchemeResponseBean>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
