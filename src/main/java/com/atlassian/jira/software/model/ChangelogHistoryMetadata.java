/*
 * Jira Software Cloud API
 * Jira Software Cloud REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.software.model;

import java.util.Objects;
import com.atlassian.jira.software.model.ChangelogHistoryMetadataAllOfActor;
import com.atlassian.jira.software.model.ChangelogHistoryMetadataAllOfCause;
import com.atlassian.jira.software.model.ChangelogHistoryMetadataAllOfGenerator;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.atlassian.jira.invoker.JSON;

/**
 * The history metadata associated with the changed.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-05T13:52:26.392070-04:00[America/New_York]", comments = "Generator version: 7.12.0")
public class ChangelogHistoryMetadata {
  public static final String SERIALIZED_NAME_ACTIVITY_DESCRIPTION = "activityDescription";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_DESCRIPTION)
  @javax.annotation.Nullable
  private String activityDescription;

  public static final String SERIALIZED_NAME_ACTIVITY_DESCRIPTION_KEY = "activityDescriptionKey";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_DESCRIPTION_KEY)
  @javax.annotation.Nullable
  private String activityDescriptionKey;

  public static final String SERIALIZED_NAME_ACTOR = "actor";
  @SerializedName(SERIALIZED_NAME_ACTOR)
  @javax.annotation.Nullable
  private ChangelogHistoryMetadataAllOfActor actor;

  public static final String SERIALIZED_NAME_CAUSE = "cause";
  @SerializedName(SERIALIZED_NAME_CAUSE)
  @javax.annotation.Nullable
  private ChangelogHistoryMetadataAllOfCause cause;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_DESCRIPTION_KEY = "descriptionKey";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_KEY)
  @javax.annotation.Nullable
  private String descriptionKey;

  public static final String SERIALIZED_NAME_EMAIL_DESCRIPTION = "emailDescription";
  @SerializedName(SERIALIZED_NAME_EMAIL_DESCRIPTION)
  @javax.annotation.Nullable
  private String emailDescription;

  public static final String SERIALIZED_NAME_EMAIL_DESCRIPTION_KEY = "emailDescriptionKey";
  @SerializedName(SERIALIZED_NAME_EMAIL_DESCRIPTION_KEY)
  @javax.annotation.Nullable
  private String emailDescriptionKey;

  public static final String SERIALIZED_NAME_EXTRA_DATA = "extraData";
  @SerializedName(SERIALIZED_NAME_EXTRA_DATA)
  @javax.annotation.Nullable
  private Map<String, String> extraData = new HashMap<>();

  public static final String SERIALIZED_NAME_GENERATOR = "generator";
  @SerializedName(SERIALIZED_NAME_GENERATOR)
  @javax.annotation.Nullable
  private ChangelogHistoryMetadataAllOfGenerator generator;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  @javax.annotation.Nullable
  private String type;

  public ChangelogHistoryMetadata() {
  }

  public ChangelogHistoryMetadata activityDescription(@javax.annotation.Nullable String activityDescription) {
    this.activityDescription = activityDescription;
    return this;
  }

  /**
   * The activity described in the history record.
   * @return activityDescription
   */
  @javax.annotation.Nullable
  public String getActivityDescription() {
    return activityDescription;
  }

  public void setActivityDescription(@javax.annotation.Nullable String activityDescription) {
    this.activityDescription = activityDescription;
  }


  public ChangelogHistoryMetadata activityDescriptionKey(@javax.annotation.Nullable String activityDescriptionKey) {
    this.activityDescriptionKey = activityDescriptionKey;
    return this;
  }

  /**
   * The key of the activity described in the history record.
   * @return activityDescriptionKey
   */
  @javax.annotation.Nullable
  public String getActivityDescriptionKey() {
    return activityDescriptionKey;
  }

  public void setActivityDescriptionKey(@javax.annotation.Nullable String activityDescriptionKey) {
    this.activityDescriptionKey = activityDescriptionKey;
  }


  public ChangelogHistoryMetadata actor(@javax.annotation.Nullable ChangelogHistoryMetadataAllOfActor actor) {
    this.actor = actor;
    return this;
  }

  /**
   * Get actor
   * @return actor
   */
  @javax.annotation.Nullable
  public ChangelogHistoryMetadataAllOfActor getActor() {
    return actor;
  }

  public void setActor(@javax.annotation.Nullable ChangelogHistoryMetadataAllOfActor actor) {
    this.actor = actor;
  }


  public ChangelogHistoryMetadata cause(@javax.annotation.Nullable ChangelogHistoryMetadataAllOfCause cause) {
    this.cause = cause;
    return this;
  }

  /**
   * Get cause
   * @return cause
   */
  @javax.annotation.Nullable
  public ChangelogHistoryMetadataAllOfCause getCause() {
    return cause;
  }

  public void setCause(@javax.annotation.Nullable ChangelogHistoryMetadataAllOfCause cause) {
    this.cause = cause;
  }


  public ChangelogHistoryMetadata description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the history record.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public ChangelogHistoryMetadata descriptionKey(@javax.annotation.Nullable String descriptionKey) {
    this.descriptionKey = descriptionKey;
    return this;
  }

  /**
   * The description key of the history record.
   * @return descriptionKey
   */
  @javax.annotation.Nullable
  public String getDescriptionKey() {
    return descriptionKey;
  }

  public void setDescriptionKey(@javax.annotation.Nullable String descriptionKey) {
    this.descriptionKey = descriptionKey;
  }


  public ChangelogHistoryMetadata emailDescription(@javax.annotation.Nullable String emailDescription) {
    this.emailDescription = emailDescription;
    return this;
  }

  /**
   * The description of the email address associated the history record.
   * @return emailDescription
   */
  @javax.annotation.Nullable
  public String getEmailDescription() {
    return emailDescription;
  }

  public void setEmailDescription(@javax.annotation.Nullable String emailDescription) {
    this.emailDescription = emailDescription;
  }


  public ChangelogHistoryMetadata emailDescriptionKey(@javax.annotation.Nullable String emailDescriptionKey) {
    this.emailDescriptionKey = emailDescriptionKey;
    return this;
  }

  /**
   * The description key of the email address associated the history record.
   * @return emailDescriptionKey
   */
  @javax.annotation.Nullable
  public String getEmailDescriptionKey() {
    return emailDescriptionKey;
  }

  public void setEmailDescriptionKey(@javax.annotation.Nullable String emailDescriptionKey) {
    this.emailDescriptionKey = emailDescriptionKey;
  }


  public ChangelogHistoryMetadata extraData(@javax.annotation.Nullable Map<String, String> extraData) {
    this.extraData = extraData;
    return this;
  }

  public ChangelogHistoryMetadata putExtraDataItem(String key, String extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new HashMap<>();
    }
    this.extraData.put(key, extraDataItem);
    return this;
  }

  /**
   * Additional arbitrary information about the history record.
   * @return extraData
   */
  @javax.annotation.Nullable
  public Map<String, String> getExtraData() {
    return extraData;
  }

  public void setExtraData(@javax.annotation.Nullable Map<String, String> extraData) {
    this.extraData = extraData;
  }


  public ChangelogHistoryMetadata generator(@javax.annotation.Nullable ChangelogHistoryMetadataAllOfGenerator generator) {
    this.generator = generator;
    return this;
  }

  /**
   * Get generator
   * @return generator
   */
  @javax.annotation.Nullable
  public ChangelogHistoryMetadataAllOfGenerator getGenerator() {
    return generator;
  }

  public void setGenerator(@javax.annotation.Nullable ChangelogHistoryMetadataAllOfGenerator generator) {
    this.generator = generator;
  }


  public ChangelogHistoryMetadata type(@javax.annotation.Nullable String type) {
    this.type = type;
    return this;
  }

  /**
   * The type of the history record.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(@javax.annotation.Nullable String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangelogHistoryMetadata changelogHistoryMetadata = (ChangelogHistoryMetadata) o;
    return Objects.equals(this.activityDescription, changelogHistoryMetadata.activityDescription) &&
        Objects.equals(this.activityDescriptionKey, changelogHistoryMetadata.activityDescriptionKey) &&
        Objects.equals(this.actor, changelogHistoryMetadata.actor) &&
        Objects.equals(this.cause, changelogHistoryMetadata.cause) &&
        Objects.equals(this.description, changelogHistoryMetadata.description) &&
        Objects.equals(this.descriptionKey, changelogHistoryMetadata.descriptionKey) &&
        Objects.equals(this.emailDescription, changelogHistoryMetadata.emailDescription) &&
        Objects.equals(this.emailDescriptionKey, changelogHistoryMetadata.emailDescriptionKey) &&
        Objects.equals(this.extraData, changelogHistoryMetadata.extraData) &&
        Objects.equals(this.generator, changelogHistoryMetadata.generator) &&
        Objects.equals(this.type, changelogHistoryMetadata.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityDescription, activityDescriptionKey, actor, cause, description, descriptionKey, emailDescription, emailDescriptionKey, extraData, generator, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangelogHistoryMetadata {\n");
    sb.append("    activityDescription: ").append(toIndentedString(activityDescription)).append("\n");
    sb.append("    activityDescriptionKey: ").append(toIndentedString(activityDescriptionKey)).append("\n");
    sb.append("    actor: ").append(toIndentedString(actor)).append("\n");
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionKey: ").append(toIndentedString(descriptionKey)).append("\n");
    sb.append("    emailDescription: ").append(toIndentedString(emailDescription)).append("\n");
    sb.append("    emailDescriptionKey: ").append(toIndentedString(emailDescriptionKey)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("    generator: ").append(toIndentedString(generator)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activityDescription");
    openapiFields.add("activityDescriptionKey");
    openapiFields.add("actor");
    openapiFields.add("cause");
    openapiFields.add("description");
    openapiFields.add("descriptionKey");
    openapiFields.add("emailDescription");
    openapiFields.add("emailDescriptionKey");
    openapiFields.add("extraData");
    openapiFields.add("generator");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ChangelogHistoryMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ChangelogHistoryMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChangelogHistoryMetadata is not found in the empty JSON string", ChangelogHistoryMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ChangelogHistoryMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChangelogHistoryMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("activityDescription") != null && !jsonObj.get("activityDescription").isJsonNull()) && !jsonObj.get("activityDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activityDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activityDescription").toString()));
      }
      if ((jsonObj.get("activityDescriptionKey") != null && !jsonObj.get("activityDescriptionKey").isJsonNull()) && !jsonObj.get("activityDescriptionKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activityDescriptionKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activityDescriptionKey").toString()));
      }
      // validate the optional field `actor`
      if (jsonObj.get("actor") != null && !jsonObj.get("actor").isJsonNull()) {
        ChangelogHistoryMetadataAllOfActor.validateJsonElement(jsonObj.get("actor"));
      }
      // validate the optional field `cause`
      if (jsonObj.get("cause") != null && !jsonObj.get("cause").isJsonNull()) {
        ChangelogHistoryMetadataAllOfCause.validateJsonElement(jsonObj.get("cause"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("descriptionKey") != null && !jsonObj.get("descriptionKey").isJsonNull()) && !jsonObj.get("descriptionKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `descriptionKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("descriptionKey").toString()));
      }
      if ((jsonObj.get("emailDescription") != null && !jsonObj.get("emailDescription").isJsonNull()) && !jsonObj.get("emailDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailDescription").toString()));
      }
      if ((jsonObj.get("emailDescriptionKey") != null && !jsonObj.get("emailDescriptionKey").isJsonNull()) && !jsonObj.get("emailDescriptionKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailDescriptionKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailDescriptionKey").toString()));
      }
      // validate the optional field `generator`
      if (jsonObj.get("generator") != null && !jsonObj.get("generator").isJsonNull()) {
        ChangelogHistoryMetadataAllOfGenerator.validateJsonElement(jsonObj.get("generator"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChangelogHistoryMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChangelogHistoryMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChangelogHistoryMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChangelogHistoryMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<ChangelogHistoryMetadata>() {
           @Override
           public void write(JsonWriter out, ChangelogHistoryMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChangelogHistoryMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             //validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ChangelogHistoryMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ChangelogHistoryMetadata
   * @throws IOException if the JSON string is invalid with respect to ChangelogHistoryMetadata
   */
  public static ChangelogHistoryMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChangelogHistoryMetadata.class);
  }

  /**
   * Convert an instance of ChangelogHistoryMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

