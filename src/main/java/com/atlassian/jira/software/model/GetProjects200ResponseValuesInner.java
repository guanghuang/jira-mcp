/*
 * Jira Software Cloud API
 * Jira Software Cloud REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.software.model;

import java.util.Objects;
import com.atlassian.jira.software.model.GetProjects200ResponseValuesInnerAvatarUrls;
import com.atlassian.jira.software.model.GetProjects200ResponseValuesInnerProjectCategory;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.atlassian.jira.invoker.JSON;

/**
 * GetProjects200ResponseValuesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-05T13:52:26.392070-04:00[America/New_York]", comments = "Generator version: 7.12.0")
public class GetProjects200ResponseValuesInner {
  public static final String SERIALIZED_NAME_AVATAR_URLS = "avatarUrls";
  @SerializedName(SERIALIZED_NAME_AVATAR_URLS)
  @javax.annotation.Nullable
  private GetProjects200ResponseValuesInnerAvatarUrls avatarUrls;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  @javax.annotation.Nullable
  private String key;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_PROJECT_CATEGORY = "projectCategory";
  @SerializedName(SERIALIZED_NAME_PROJECT_CATEGORY)
  @javax.annotation.Nullable
  private GetProjects200ResponseValuesInnerProjectCategory projectCategory;

  public static final String SERIALIZED_NAME_PROJECT_TYPE_KEY = "projectTypeKey";
  @SerializedName(SERIALIZED_NAME_PROJECT_TYPE_KEY)
  @javax.annotation.Nullable
  private String projectTypeKey;

  public static final String SERIALIZED_NAME_SELF = "self";
  @SerializedName(SERIALIZED_NAME_SELF)
  @javax.annotation.Nullable
  private String self;

  public static final String SERIALIZED_NAME_SIMPLIFIED = "simplified";
  @SerializedName(SERIALIZED_NAME_SIMPLIFIED)
  @javax.annotation.Nullable
  private Boolean simplified;

  public GetProjects200ResponseValuesInner() {
  }

  public GetProjects200ResponseValuesInner avatarUrls(@javax.annotation.Nullable GetProjects200ResponseValuesInnerAvatarUrls avatarUrls) {
    this.avatarUrls = avatarUrls;
    return this;
  }

  /**
   * Get avatarUrls
   * @return avatarUrls
   */
  @javax.annotation.Nullable
  public GetProjects200ResponseValuesInnerAvatarUrls getAvatarUrls() {
    return avatarUrls;
  }

  public void setAvatarUrls(@javax.annotation.Nullable GetProjects200ResponseValuesInnerAvatarUrls avatarUrls) {
    this.avatarUrls = avatarUrls;
  }


  public GetProjects200ResponseValuesInner id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * The ID of the project.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public GetProjects200ResponseValuesInner key(@javax.annotation.Nullable String key) {
    this.key = key;
    return this;
  }

  /**
   * The key of the project.
   * @return key
   */
  @javax.annotation.Nullable
  public String getKey() {
    return key;
  }

  public void setKey(@javax.annotation.Nullable String key) {
    this.key = key;
  }


  public GetProjects200ResponseValuesInner name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the project.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public GetProjects200ResponseValuesInner projectCategory(@javax.annotation.Nullable GetProjects200ResponseValuesInnerProjectCategory projectCategory) {
    this.projectCategory = projectCategory;
    return this;
  }

  /**
   * Get projectCategory
   * @return projectCategory
   */
  @javax.annotation.Nullable
  public GetProjects200ResponseValuesInnerProjectCategory getProjectCategory() {
    return projectCategory;
  }

  public void setProjectCategory(@javax.annotation.Nullable GetProjects200ResponseValuesInnerProjectCategory projectCategory) {
    this.projectCategory = projectCategory;
  }


  public GetProjects200ResponseValuesInner projectTypeKey(@javax.annotation.Nullable String projectTypeKey) {
    this.projectTypeKey = projectTypeKey;
    return this;
  }

  /**
   * The type key of the project.
   * @return projectTypeKey
   */
  @javax.annotation.Nullable
  public String getProjectTypeKey() {
    return projectTypeKey;
  }

  public void setProjectTypeKey(@javax.annotation.Nullable String projectTypeKey) {
    this.projectTypeKey = projectTypeKey;
  }


  public GetProjects200ResponseValuesInner self(@javax.annotation.Nullable String self) {
    this.self = self;
    return this;
  }

  /**
   * The URL of the project.
   * @return self
   */
  @javax.annotation.Nullable
  public String getSelf() {
    return self;
  }

  public void setSelf(@javax.annotation.Nullable String self) {
    this.self = self;
  }


  public GetProjects200ResponseValuesInner simplified(@javax.annotation.Nullable Boolean simplified) {
    this.simplified = simplified;
    return this;
  }

  /**
   * Indicates if the project is simplified.
   * @return simplified
   */
  @javax.annotation.Nullable
  public Boolean getSimplified() {
    return simplified;
  }

  public void setSimplified(@javax.annotation.Nullable Boolean simplified) {
    this.simplified = simplified;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetProjects200ResponseValuesInner getProjects200ResponseValuesInner = (GetProjects200ResponseValuesInner) o;
    return Objects.equals(this.avatarUrls, getProjects200ResponseValuesInner.avatarUrls) &&
        Objects.equals(this.id, getProjects200ResponseValuesInner.id) &&
        Objects.equals(this.key, getProjects200ResponseValuesInner.key) &&
        Objects.equals(this.name, getProjects200ResponseValuesInner.name) &&
        Objects.equals(this.projectCategory, getProjects200ResponseValuesInner.projectCategory) &&
        Objects.equals(this.projectTypeKey, getProjects200ResponseValuesInner.projectTypeKey) &&
        Objects.equals(this.self, getProjects200ResponseValuesInner.self) &&
        Objects.equals(this.simplified, getProjects200ResponseValuesInner.simplified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(avatarUrls, id, key, name, projectCategory, projectTypeKey, self, simplified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetProjects200ResponseValuesInner {\n");
    sb.append("    avatarUrls: ").append(toIndentedString(avatarUrls)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectCategory: ").append(toIndentedString(projectCategory)).append("\n");
    sb.append("    projectTypeKey: ").append(toIndentedString(projectTypeKey)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    simplified: ").append(toIndentedString(simplified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("avatarUrls");
    openapiFields.add("id");
    openapiFields.add("key");
    openapiFields.add("name");
    openapiFields.add("projectCategory");
    openapiFields.add("projectTypeKey");
    openapiFields.add("self");
    openapiFields.add("simplified");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetProjects200ResponseValuesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetProjects200ResponseValuesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetProjects200ResponseValuesInner is not found in the empty JSON string", GetProjects200ResponseValuesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetProjects200ResponseValuesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetProjects200ResponseValuesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `avatarUrls`
      if (jsonObj.get("avatarUrls") != null && !jsonObj.get("avatarUrls").isJsonNull()) {
        GetProjects200ResponseValuesInnerAvatarUrls.validateJsonElement(jsonObj.get("avatarUrls"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("key") != null && !jsonObj.get("key").isJsonNull()) && !jsonObj.get("key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("key").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `projectCategory`
      if (jsonObj.get("projectCategory") != null && !jsonObj.get("projectCategory").isJsonNull()) {
        GetProjects200ResponseValuesInnerProjectCategory.validateJsonElement(jsonObj.get("projectCategory"));
      }
      if ((jsonObj.get("projectTypeKey") != null && !jsonObj.get("projectTypeKey").isJsonNull()) && !jsonObj.get("projectTypeKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectTypeKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectTypeKey").toString()));
      }
      if ((jsonObj.get("self") != null && !jsonObj.get("self").isJsonNull()) && !jsonObj.get("self").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `self` to be a primitive type in the JSON string but got `%s`", jsonObj.get("self").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetProjects200ResponseValuesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetProjects200ResponseValuesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetProjects200ResponseValuesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetProjects200ResponseValuesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetProjects200ResponseValuesInner>() {
           @Override
           public void write(JsonWriter out, GetProjects200ResponseValuesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetProjects200ResponseValuesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             //validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetProjects200ResponseValuesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetProjects200ResponseValuesInner
   * @throws IOException if the JSON string is invalid with respect to GetProjects200ResponseValuesInner
   */
  public static GetProjects200ResponseValuesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetProjects200ResponseValuesInner.class);
  }

  /**
   * Convert an instance of GetProjects200ResponseValuesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

